-content_for :header_content do
  Phenomenal Gem is a context-oriented framework implemented in Ruby that allows context-oriented programming in Ruby and Ruby on Rails applications.
    
.row-fluid
  .span4
    %h2 Pimp Your App
    #customizer.well
      =render "shared/customize_form"
  .span8
    %h2 Keep in Touch
    #news.well   
      =render "announces/index"
    %h2 Contexts Overview
    #analyser.well   
      =render "contexts/index"
.row-fluid
  .row-fluid
    .span12
      %h2 We Are Everywhere
    .row-fluid
      .span4
        #rubygems.social.well
          =link_to "http://rubygems.org/profiles/phenomenal" do
            .social_logo
              =image_tag "socials/RubyGems-48.png"
            .social_content
              %strong gem install phenomenal
              %br
              %strong gem install phenomenal_rails
          .clear
      .span4
        #github.social.well
          =link_to "https://github.com/phenomenal" do
            .social_logo
              =image_tag "socials/Github-48.png"
            .social_content
              %strong Phenomenal Gem
          .clear
      .span4
        #twitter.social.well
          =link_to "The_Phenomenal_Gem_Poncelet_Vigneron_2012.pdf" do
            .social_logo
              =image_tag "socials/PDF-File-48.png"
            .social_content
              %strong The Phenomenal Gem Thesis
          .clear
.row-fluid
  .span12      
    %h2 Damn What Is Phenomenal Gem?
    .well
      %p
      The Phenomenal Gem is a 
      %acronym{:title=>"Context-Oriented Programming"} COP
      framework for the dynamic programming language Ruby. With this framework, programmers can handle contexts as first-class entities allowing them to adapt the behaviour of their applications dynamically in a clean and structured manner. In addition to this 
      %acronym{:title=>"Context-Oriented Programming"} COP 
      framework, the thesis also introduces the notion of 
      %acronym{:title=>"Context as a Feature"} CaaF 
      that tries to merge the best of 
      %acronym{:title=>"Context-Oriented Programming"} COP
      and 
      %acronym{:title=>"Feature-Oriented Programming"} FOP 
      into a single new paradigm. From the point of view of usability in todayâ€™s web application, this thesis builds the notion of 
      %acronym{:title=>"Feature as a Service"} FaaS 
      on top of 
      %acronym{:title=>"Context as a Feature"} CaaF
      , and integrates it in the Ruby on Rails web framework. The implementation and semantics of these concepts are presented in detail and validated by a real-world case study of a 
      %acronym{:title=>"Software as a Service"} SaaS
      %acronym{:title=>"Enterprise Resource Planning"} ERP 
      application, developed by an industrial collaborator.
